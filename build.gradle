plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.magicwater'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '7.0.28'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.3.1.RELEASE'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.3.1.RELEASE'

	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testCompile group: 'org.springframework.security', name: 'spring-security-test' //, version: '5.3.2.RELEASE'

	// https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'
	

	compile("javax.annotation:javax.annotation-api:1.3.2")
	compile("com.querydsl:querydsl-jpa:4.2.1")
	/*
	compileOnly("com.querydsl:querydsl-apt:4.2.1:jpa")
	annotationProcessor(
		"javax.annotation:javax.annotation-api:1.3.2",
		"javax.persistence:javax.persistence-api:2.2",
		"com.querydsl:querydsl-apt:4.2.1:jpa"
	)
	*/
}

test {
	useJUnitPlatform()
}
/*
def generationPath = file("generated/")

// 어노테이션 프로세서에 의해 자동 생성된 소스코드가 저장될 경로 지정
compileJava {
	options.annotationProcessorGeneratedSourcesDirectory = generationPath
}

// clean Task 실행시에 자동 생성된 소스코드를 모두 삭제한다
clean.doLast {
	generationPath.deleteDir()
}

// 자동 생성된 소스코드의 경로도 소스셋에 포함한다
sourceSets {
	main {
		java {
			srcDirs += generationPath
		}
	}

}
*/
